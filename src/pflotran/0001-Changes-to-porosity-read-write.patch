From 53c80a1a6cfd4e10839b8312836ff418c7d10a73 Mon Sep 17 00:00:00 2001
From: David Fukuyama <defukuy@sandia.gov>
Date: Fri, 8 Dec 2023 09:29:18 -0700
Subject: [PATCH] Changes to porosity read/write

---
 regression_tests/general/reduce_porosity.in | 10 +++++++---
 src/pflotran/condition_control.F90          |  6 +++---
 src/pflotran/general_aux.F90                |  7 +++++--
 src/pflotran/material.F90                   |  1 -
 src/pflotran/patch.F90                      |  2 +-
 5 files changed, 16 insertions(+), 10 deletions(-)

diff --git a/regression_tests/general/reduce_porosity.in b/regression_tests/general/reduce_porosity.in
index bd9a89a23..53a7b1754 100644
--- a/regression_tests/general/reduce_porosity.in
+++ b/regression_tests/general/reduce_porosity.in
@@ -10,7 +10,7 @@ SIMULATION
       MODE GENERAL
         OPTIONS
           # this allows the porosity to change due to dissolution and precipitation of salt too (solved for implicitly)
-	  SOLUBLE_MATRIX
+#	  SOLUBLE_MATRIX
           SOLUTE SALT
         / 
       /
@@ -79,6 +79,7 @@ REGION right_boundary
 #=========================== material properties ==============================
 MATERIAL_PROPERTY halite
   ID 1
+  SOLUBLE
   CHARACTERISTIC_CURVES sf1
   POROSITY  0.25d0
   TORTUOSITY 0.1d0
@@ -116,6 +117,7 @@ END
 OUTPUT
   SNAPSHOT_FILE
     #FORMAT HDF5
+    FORMAT TECPLOT POINT
     PERIODIC TIME 1.d1 y
     VARIABLES
       LIQUID_PRESSURE
@@ -144,12 +146,14 @@ FLOW_CONDITION initial
   TYPE
     GAS_PRESSURE DIRICHLET
     GAS_SATURATION DIRICHLET
-    POROSITY DIRICHLET  # << porosity is set as an initial condition, rather than a matieral property
+#    POROSITY DIRICHLET  # << porosity is set as an initial condition, rather than a matieral property
+    SALT_MOLE_FRACTION AT_SOLUBILITY
     TEMPERATURE DIRICHLET
   /
   GAS_PRESSURE 150000.D0
   GAS_SATURATION 5.D-1
-  POROSITY 0.25D0  
+#  POROSITY 0.25D0  
+  SALT_MOLE_FRACTION 999.D0
   TEMPERATURE 25.D0
 /
 FLOW_CONDITION injection
diff --git a/src/pflotran/condition_control.F90 b/src/pflotran/condition_control.F90
index d98226490..623d03275 100644
--- a/src/pflotran/condition_control.F90
+++ b/src/pflotran/condition_control.F90
@@ -399,7 +399,7 @@ subroutine CondControlAssignFlowInitCond(realization)
                   if (general_salt) then
                     if (material_property_array(patch%imat(ghosted_id))%ptr%soluble) then
                       xx_p(ibegin+GENERAL_POROSITY_DOF) = &
-                           material_auxvars(ghosted_id)%porosity
+                           material_auxvars(ghosted_id)%porosity_0
                     else
                       !DF: if the flow condition is set to soluble, then 
                       !    it is initialized with a tiny amount of solid precipitate, and 
@@ -443,7 +443,7 @@ subroutine CondControlAssignFlowInitCond(realization)
                   if (general_salt) then
                     if (material_property_array(patch%imat(ghosted_id))%ptr%soluble) then
                       xx_p(ibegin+GENERAL_POROSITY_DOF) = &
-                           material_auxvars(ghosted_id)%porosity
+                           material_auxvars(ghosted_id)%porosity_0
                     else
                       !DF: if the flow condition is set to soluble, then 
                       !    it is initialized with a tiny amount of solid precipitate, and 
@@ -477,7 +477,7 @@ subroutine CondControlAssignFlowInitCond(realization)
                   if (general_salt) then
                     if (material_property_array(patch%imat(ghosted_id))%ptr%soluble) then
                       xx_p(ibegin+GENERAL_POROSITY_DOF) = &
-                           material_auxvars(ghosted_id)%porosity
+                           material_auxvars(ghosted_id)%porosity_0
                     else
                       !DF: if the flow condition is set to soluble, then 
                       !    it is initialized with a tiny amount of solid precipitate, and 
diff --git a/src/pflotran/general_aux.F90 b/src/pflotran/general_aux.F90
index 760fed41e..c21bed319 100644
--- a/src/pflotran/general_aux.F90
+++ b/src/pflotran/general_aux.F90
@@ -2077,7 +2077,7 @@ subroutine GeneralAuxVarCompute4(x,gen_auxvar,global_auxvar,material_auxvar, &
         gen_auxvar%sat(pid) = x(GENERAL_PRECIPITATE_SAT_DOF)
       else
         gen_auxvar%effective_porosity = max(0.d0,x(GENERAL_POROSITY_DOF))
-        material_auxvar%porosity = gen_auxvar%effective_porosity
+        !material_auxvar%porosity = gen_auxvar%effective_porosity
         gen_auxvar%sat(pid) = 0.d0
       endif
       call GeneralAuxNaClSolubility(gen_auxvar%temp,NaClSolubility,solubility_function)
@@ -2443,7 +2443,10 @@ subroutine GeneralAuxVarCompute4(x,gen_auxvar,global_auxvar,material_auxvar, &
       endif
     endif
   else
-    material_auxvar%porosity = gen_auxvar%effective_porosity
+    if (option%iflag /= GENERAL_UPDATE_FOR_BOUNDARY .and. &
+        option%iflag /= GENERAL_UPDATE_FOR_DERIVATIVE) then
+      material_auxvar%porosity = gen_auxvar%effective_porosity
+    endif
   endif
   if (associated(gen_auxvar%d)) then
     gen_auxvar%d%por_p = dpor_dp
diff --git a/src/pflotran/material.F90 b/src/pflotran/material.F90
index c66b765e0..d6bfd58d7 100644
--- a/src/pflotran/material.F90
+++ b/src/pflotran/material.F90
@@ -488,7 +488,6 @@ subroutine MaterialPropertyRead(material_property,input,option)
                            &porosity','MATERIAL_PROPERTY')
       case('SOLUBLE')
         material_property%soluble = PETSC_TRUE
-        call InputErrorMsg(input,option,'SOLUBLE','MATERIAL_PROPERTY')
       case('WIPP-FRACTURE')
         ! Calculates permeability and porosity induced by fracture,
         ! which is described by pressure within certain range of pressure
diff --git a/src/pflotran/patch.F90 b/src/pflotran/patch.F90
index 0bc689682..8bff37b76 100644
--- a/src/pflotran/patch.F90
+++ b/src/pflotran/patch.F90
@@ -4654,7 +4654,7 @@ subroutine PatchGetPorosityValue(coupler,patch,iconn,porosity,soluble)
   local_id = coupler%connection_set%id_dn(iconn)
   ghosted_id = grid%nL2G(local_id)
   soluble = material_property_array(patch%imat(ghosted_id))%ptr%soluble
-  porosity = material_auxvars(ghosted_id)%porosity
+  porosity = material_auxvars(ghosted_id)%porosity_0
 
 end subroutine PatchGetPorosityValue
 
-- 
2.34.1

